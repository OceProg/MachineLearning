{"metadata":{"name":"tp-Clustering-MR","user_save_timestamp":"1970-01-01T01:00:00.000Z","auto_save_timestamp":"1970-01-01T01:00:00.000Z","language_info":{"name":"scala","file_extension":"scala","codemirror_mode":"text/x-scala"},"trusted":true,"customLocalRepo":null,"customRepos":null,"customDeps":["com.github.haifengl % smile-scala_2.11 % 1.1.0"],"customImports":null,"customArgs":null,"customSparkConf":null},"cells":[{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"D28FC49D86E14C8889CB8489A1741971"},"cell_type":"code","source":"import scala.io.Source\nimport scala.math._\nimport java.io._\nimport smile._\nimport smile.data._\n//import smile.shell._\nimport smile.classification._\nimport javax.swing.JFrame\nimport javax.swing.JPanel\nimport smile.plot.BarPlot\nimport smile.plot.Palette\nimport scala.io.Source\nimport smile.plot.ScatterPlot\nimport smile.regression.ols\nimport java.awt.Color;\nimport java.awt.GridLayout;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport smile.plot.Line;\nimport smile.plot.LinePlot;\nimport smile.plot.PlotCanvas;\nimport smile.validation.RMSE\nimport java.awt.Dimension\nimport java.awt.Robot\nimport java.awt.Graphics;\nimport java.awt.Graphics2D;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport javax.imageio.ImageIO;\n","outputs":[]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"presentation":{"tabs_state":"{\n  \"tab_id\": \"#tab2129735466-0\"\n}","pivot_chart_state":"{\n  \"hiddenAttributes\": [],\n  \"menuLimit\": 200,\n  \"cols\": [],\n  \"rows\": [],\n  \"vals\": [],\n  \"exclusions\": {},\n  \"inclusions\": {},\n  \"unusedAttrsVertical\": 85,\n  \"autoSortUnusedAttrs\": false,\n  \"inclusionsInfo\": {},\n  \"aggregatorName\": \"Count\",\n  \"rendererName\": \"Table\"\n}"},"id":"99E71871CC2F43709833C138E6F687B9"},"cell_type":"code","source":"","outputs":[]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"06F7CB7D3AD64268848D6C1DB59CC47A"},"cell_type":"code","source":"val path = \"/home/user14/Documents/MachineLearning/DataTP/\"\nval file_name1 = \"Data1.mat\"\nval ordi = scala.io.Source.fromFile(path + file_name1).getLines.filter(!_.isEmpty()).map(_.split(\"\\\\t\"))\nvar data = ordi.map { x => Array(x(0).toDouble, x(1).toDouble) }.toArray\nval x = data.map { x => Array(x(0).toDouble) }.toArray\nval y = data.map { x => x(1).toDouble }.toArray\nvar i = (1 to 500).toIterator\n//data.foreach { x => println(i.next()+\": \"+x(0)+\" \"+x(1)) }\n\n//val clusters = smile.clustering.kmeans(data, 3, runs = 20)\n//val ord = clusters.getClusterLabel\n//smile.plot.plot(data, ord, '#', Palette.COLORS)\n\n//val window = smile.plot.plot(data, 'S')\n\n val framen = new JFrame(\"\");\n  framen.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n  framen.setLocationRelativeTo(null);\n  framen.setVisible(true);\n  framen.setLayout(new GridLayout(2, 3))\n  framen.setSize(new Dimension(1000,1000));\n\nval k = Array(2, 3, 5, 10, 15, 20)\nval nbIterations = 200\nval nbRun = 20\n\nfor (j<- 0 to 6){\n  val clusters = smile.clustering.kmeans(data, k(j), nbIterations, nbRun)\n  val cl = clusters.getClusterLabel\n  println(\"\\n KMeans for \" + k(j) + \"clusters\")\n  println(clusers)\n  val canvas =  smile.plot.ScatterPlot.plot(data, cl, '#', Palette.COLORS)\n      canvas.setTitle(\"KMeans for \" + k(j) + \"clusters\");\n      canvas.setAxisLabels(\"X\", \"Y\");\n      canvas.setSize(new Dimension(1000,1000));\n      canvas.setVisible(true)\n  framen.add(canvas);\n  framen.getContentPane().add(canvas);    \n}\n\n//val image1 = new BufferedImage(1000, 1000, BufferedImage.TYPE_INT_RGB);\n//val graphics2D = image1.createGraphics();\n//framen.paint(graphics2D);\n//val outfile = \"235101520clusters_3by2\"\n//ImageIO.write(image1,\"jpeg\", new File(path+outfile));\n//println(\"boop\")\n\n//val imagebot = new java.awt.Robot().createScreenCapture(framen)\n","outputs":[]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"DBC6B63DABC24FA68F091646386BDF42"},"cell_type":"code","source":"","outputs":[]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"B3DC15C9658B4A968E6F035ACE390C27"},"cell_type":"code","source":"","outputs":[]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"2B3A41A02FE04F72B35DA246CAB41C73"},"cell_type":"code","source":"","outputs":[]}],"nbformat":4}